#Take form D-Expenditure
getwd()
D.Expenditure.Table.2014 <- read.csv("~/Dropbox/opendisclosure/City Data/efile_CSJ_2014 2/D-Expenditure-Table 1.csv",
stringsAsFactors=FALSE)
#There is money going to help/or not help a candidate
#Cand_NamL = Candidate's name
names(D.Expenditure.Table.2014)
#interested in Sup_Opp_Cd & Candidate's name & Amount
col_Amt <- which(colnames(D.Expenditure.Table.2014)=="Amount")  ##"ID" is the name of the column which can be changed
col_Name <- which(colnames(D.Expenditure.Table.2014)=="Cand_NamL") ##"TDate" is the name of the Transfer Date column
col_Sup <- which(colnames(D.Expenditure.Table.2014)=="Sup_Opp_Cd")  ##"Amt1" is the transfer amount that we are interested in
data <- D.Expenditure.Table.2014[ , c(col_Amt, col_Name, col_Sup)]
str(data)
data$Cand_NamL <- as.factor(data$Cand_NamL)
data$Sup_Opp_Cd <- as.factor(data$Sup_Opp_Cd)
summarySupOpp <- aggregate(Amount ~ Cand_NamL + Sup_Opp_Cd, data = data, FUN = sum)
data$Cand_NamL <- as.factor(tolower(data$Cand_NamL))
str(data) #check
summarySupOpp <- aggregate(data, Amount ~ Cand_NamL + Sup_Opp_Cd, FUN=sum)
summarySupOpp <- aggregate(data$Amount, by=list(Cand_NamL, Sup_Opp_Cd), FUN=sum)
summarySupOpp <- aggregate(data$Amount, by=list(data$Cand_NamL, data$Sup_Opp_Cd), FUN=sum)
summarySupOpp
summarySupOpp <- summarySupOpp[(summarySupOpp$Cand_NamL == "dave cortese"), c(1, 2, 3)]
summarySupOpp
str( summarySupOpp)
summarySupOpp <- aggregate(data$Amount, by=list(data$Cand_NamL, data$Sup_Opp_Cd), FUN=sum)
str( summarySupOpp)
head(summarySupOpp)
summarySupOpp <- summarySupOpp[(summarySupOpp$Group.1 == "dave cortese"), c(1, 2, 3)]
summarySupOpp
head(summarySupOpp$Group.1)
head(summarySupOpp$1)
head(summarySupOpp$col1)
data$Cand_NamL_new <- last.word( data$Cand_NamL)
data$Cand_NamL_new <- gsub(". ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
data$Cand_NamL_new <- gsub("*. ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
data$Cand_NamL_new <- gsub("[A-Z] ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
head(data$Cand_NamL)
data$Cand_NamL_new <- gsub("[^A-Z] ", "", data$Cand_NamL)
head(data$Cand_NamL)
data$Cand_NamL_new <- gsub(""." ", "", data$Cand_NamL)
data$Cand_NamL_new <- gsub(". ", "", data$Cand_NamL)
head(data$Cand_NamL)
data$Cand_NamL_new <- gsub("^.*? ", "", data$Cand_NamL)
head(data$Cand_NamL)
data$Cand_NamL_new <- gsub("[a-z] ", "", data$Cand_NamL)
head(data$Cand_NamL)
data$Cand_NamL_new <- gsub("[^a-z] ", "", data$Cand_NamL)
head(data$Cand_NamL)
data$Cand_NamL_new <- gsub("^. ", "", data$Cand_NamL)
head(data$Cand_NamL)
data$Cand_NamL_new <- gsub("^. +", "", data$Cand_NamL)
head(data$Cand_NamL)
head(data$Cand_NamL_new)
data$Cand_NamL_new <- gsub("^. ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
data$Cand_NamL_new <- gsub(". ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
data$Cand_NamL_new <- gsub("^. ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
data$Cand_NamL_new <- gsub("+. ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
data$Cand_NamL_new <- gsub("^+. ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
data$Cand_NamL_new <- gsub("+.^ ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
data$Cand_NamL_new <- gsub("+. ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
data$Cand_NamL_new <- gsub("*+. ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
data$Cand_NamL_new <- gsub("*. ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
data$Cand_NamL_new <- gsub("^*. ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
getwd()
D.Expenditure.Table.2014 <- read.csv("~/Dropbox/opendisclosure/City Data/efile_CSJ_2014 2/D-Expenditure-Table 1.csv",
stringsAsFactors=FALSE)
#There is money going to help/or not help a candidate
#Cand_NamL = Candidate's name
names(D.Expenditure.Table.2014)
#interested in Sup_Opp_Cd & Candidate's name & Amount
col_Amt <- which(colnames(D.Expenditure.Table.2014)=="Amount")  ##"ID" is the name of the column which can be changed
col_Name <- which(colnames(D.Expenditure.Table.2014)=="Cand_NamL") ##"TDate" is the name of the Transfer Date column
col_Sup <- which(colnames(D.Expenditure.Table.2014)=="Sup_Opp_Cd")  ##"Amt1" is the transfer amount that we are interested in
data <- D.Expenditure.Table.2014[ , c(col_Amt, col_Name, col_Sup)]
str(data)
data$Cand_NamL <- as.factor(tolower(data$Cand_NamL))
#only use the candidate's last name
data$Cand_NamL_new <- gsub("*. ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
data$Sup_Opp_Cd <- as.factor(data$Sup_Opp_Cd)
str(data) #check
summary <- function(candidate){
summarySupOpp <- aggregate(data$Amount, by=list(data$Cand_NamL, data$Sup_Opp_Cd), FUN=sum)
summarySupOpp <- summarySupOpp[(summarySupOpp$Group.1 == candidate), c(1, 2, 3)]
}
view(data)
getwd()
D.Expenditure.Table.2014 <- read.csv("~/Dropbox/opendisclosure/City Data/2014_CSJ/scheduleD_expenditure.csv",
stringsAsFactors=FALSE)
names(D.Expenditure.Table.2014)
col_Amt <- which(colnames(D.Expenditure.Table.2014)=="Amount")  ##"ID" is the name of the column which can be changed
col_Name <- which(colnames(D.Expenditure.Table.2014)=="Cand_NamL") ##"TDate" is the name of the Transfer Date column
col_Sup <- which(colnames(D.Expenditure.Table.2014)=="Sup_Opp_Cd")  ##"Amt1" is the transfer amount that we are interested in
data <- D.Expenditure.Table.2014[ , c(col_Amt, col_Name, col_Sup)]
str(data)
data$Cand_NamL <- as.factor(tolower(data$Cand_NamL))
#only use the candidate's last name
data$Cand_NamL_new <- gsub("*. ", "", data$Cand_NamL)
head(data$Cand_NamL_new)
data$Sup_Opp_Cd <- as.factor(data$Sup_Opp_Cd)
str(data) #check
summary <- function(candidate){
summarySupOpp <- aggregate(data$Amount, by=list(data$Cand_NamL, data$Sup_Opp_Cd), FUN=sum)
summarySupOpp <- summarySupOpp[(summarySupOpp$Group.1 == candidate), c(1, 2, 3)]
}
summary(Dave Cortese)
summary("Dave Cortese")
#Take form D-Expenditure
getwd()
D.Expenditure.Table.2014 <- read.csv("~/Dropbox/opendisclosure/City Data/2014_CSJ/scheduleD_expenditure.csv",
stringsAsFactors=FALSE)
#There is money going to help/or not help a candidate
#Cand_NamL = Candidate's name
names(D.Expenditure.Table.2014)
#interested in Sup_Opp_Cd & Candidate's name & Amount
col_Amt <- which(colnames(D.Expenditure.Table.2014)=="Amount")  ##"ID" is the name of the column which can be changed
col_Name <- which(colnames(D.Expenditure.Table.2014)=="Cand_NamL") ##"TDate" is the name of the Transfer Date column
col_Sup <- which(colnames(D.Expenditure.Table.2014)=="Sup_Opp_Cd")  ##"Amt1" is the transfer amount that we are interested in
data <- D.Expenditure.Table.2014[ , c(col_Amt, col_Name, col_Sup)]
str(data)
data$Cand_NamL <- as.factor(tolower(data$Cand_NamL))
data$Sup_Opp_Cd <- as.factor(data$Sup_Opp_Cd)
str(data) #check
summary <- function(candidate){
summarySupOpp <- aggregate(data$Amount, by=list(data$Cand_NamL, data$Sup_Opp_Cd), FUN=sum)
summarySupOpp <- summarySupOpp[(summarySupOpp$Group.1 == candidate), c(1, 2, 3)]
}
summary("Dave Cortese")
sum <- summary("Dave Cortese")
sum
summary(Dave Cortese)
levels(data$Cand_NamL)
summary("dave cortese")
head(data)
summary("charles jones")
summarySupOpp <- aggregate(data$Amount, by=list(data$Cand_NamL, data$Sup_Opp_Cd), FUN=sum)
summarySupOpp <- summarySupOpp[(summarySupOpp$Group.1 == "charles jones"), c(1, 2, 3)]
summarySupOpp
summarySupOpp <- summarySupOpp[(summarySupOpp$Group.1 == "don gagliardi"), c(1, 2, 3)]
summarySupOpp
summary <- function(candidate){
summarySupOpp <- aggregate(data$Amount, by=list(data$Cand_NamL, data$Sup_Opp_Cd), FUN=sum)
summarySupOpp <- summarySupOpp[(summarySupOpp$Group.1 == candidate), c(1, 2, 3)]
summarySupOpp
}
summary("charles jones")
#Take form D-Expenditure
getwd()
D.Expenditure.Table.2014 <- read.csv("~/Dropbox/opendisclosure/City Data/2014_CSJ/scheduleD_expenditure.csv",
stringsAsFactors=FALSE)
#There is money going to help/or not help a candidate
#Cand_NamL = Candidate's name
names(D.Expenditure.Table.2014)
#interested in Sup_Opp_Cd & Candidate's name & Amount
col_Amt <- which(colnames(D.Expenditure.Table.2014)=="Amount")  ##"ID" is the name of the column which can be changed
col_Name <- which(colnames(D.Expenditure.Table.2014)=="Cand_NamL") ##"TDate" is the name of the Transfer Date column
col_Sup <- which(colnames(D.Expenditure.Table.2014)=="Sup_Opp_Cd")  ##"Amt1" is the transfer amount that we are interested in
data <- D.Expenditure.Table.2014[ , c(col_Amt, col_Name, col_Sup)]
str(data)
#we  need to turn Candidate's Name and Support Vs. Oppose variables as factor variables
data$Cand_NamL <- as.factor(tolower(data$Cand_NamL))
data$Sup_Opp_Cd <- as.factor(data$Sup_Opp_Cd)
str(data) #check
summary <- function(candidate){
summarySupOpp <- aggregate(data$Amount, by=list(data$Cand_NamL, data$Sup_Opp_Cd), FUN=sum)
summarySupOpp <- summarySupOpp[(summarySupOpp$Group.1 == candidate), c(1, 2, 3)]
summarySupOpp
}
summary("sam liccardo")
summary("dave cortese")
#You can run the below as is to get the comma separate txt file with the info you need
#Choose the cut off date where the amt contributed is for the runoff (not for the primary).
#The contributions given strictly after this date is considered for the runoff
cutOffDate <- as.Date(as.character("2014-06-05"))  #The date has to be input in YYYY-MM-DD format
library(zipcode)
library(plyr)
A.Contributions.Table.1 <- read.csv("~/Dropbox/opendisclosure/City Data/2014_CSJ/A-Contributions-Table 1.csv", stringsAsFactors=FALSE)
efile_newest_CSJ_2013_A_contributions <- read.csv("~/Dropbox/opendisclosure/City Data/2013_CSJ/efile_newest_CSJ_2013_A_contributions.csv", stringsAsFactors=FALSE)
#View(A.Contributions.Table.1)
#View(efile_newest_CSJ_2013_A_contributions)
mayor2013<-efile_newest_CSJ_2013_A_contributions
mayor2014 <- A.Contributions.Table.1
combo <- data.frame(stringsAsFactors=FALSE)
combo <- rbind(mayor2013, mayor2014)
#cleaning zipcodes
combo$Tran_Zip4
combo$Tran_Zip4 <- as.character(combo$Tran_Zip4)
#Need to take care of case where "95132-"
#clean.zipcodes doesn't take care of cases with "-" at the end.  Instead, it returns NA's
#Though 95132-2110 is cleaned to 95132
for(i in 1:nrow(combo)) {                 #takes a few mins
if(nchar(combo$Tran_Zip4[i]) == 6)    #looking for cases only when zipcode is 6 char long
{
combo$Tran_Zip4[i] <- gsub("-.*","",combo$Tran_Zip4[i])
}
}
combo$Tran_Zip4 <- clean.zipcodes(combo$Tran_Zip4)
#cleaning dates
#something is wrong with dates in df mayor2014
combo$Tran_Date <- as.Date(as.character(combo$Tran_Date), "%m/%d/%Y")
combo$Rpt_Date <- as.Date(as.character(combo$Rpt_Date), "%m/%d/%Y")
combo$From_Date <- as.Date(as.character(combo$From_Date), "%m/%d/%Y")
somemayors <- data.frame(combo$Filer_NamL, combo$Filer_ID, combo$Rpt_Date, combo$From_Date, combo$Tran_Date, combo$Tran_ID, combo$Tran_NamL, combo$Tran_Zip4, combo$Tran_City, combo$Tran_State, combo$Tran_Amt1)
str(somemayors)
mayors <- rename(somemayors, c("combo.Filer_NamL"="Cands", "combo.Filer_ID"="ID", "combo.Rpt_Date"="RDate", "combo.From_Date" = "FDate", "combo.Tran_Date"="TDate",  "combo.Tran_ID" = "TranID","combo.Tran_NamL" = "TranName",
"combo.Tran_Zip4"="Zip", "combo.Tran_City"="City", "combo.Tran_State"="State", "combo.Tran_Amt1"="Amt1"))
primaryCandidates <- aggregate(Amt1 ~ Zip + ID + TDate,
data = mayors[(mayors$TDate <= cutOffDate),], FUN = sum)
#For Nguyen
nguyen <- primaryCandidates[primaryCandidates$ID == 1359805, ]
nguyen$firstCol <- "primary"
nguyen$secCol <- "Nguyen"
nguyen$ID <- NULL
nguyen <- nguyen[ , c(4, 5, 2, 1, 3)] #Reorder
#For Liccardo
liccardo <- primaryCandidates[primaryCandidates$ID == 1361139, ]
liccardo$firstCol <- "primary"
liccardo$secCol <- "Liccardo"
liccardo$ID <- NULL
liccardo <- liccardo[ , c(4, 5, 2, 1, 3)] #Reorder
#For Oliverio
oliverio <- primaryCandidates[primaryCandidates$ID == 1362117, ]
oliverio$firstCol <- "primary"
oliverio$secCol <- "Oliverio"
oliverio$ID <- NULL
oliverio <- oliverio[ , c(4, 5, 2, 1, 3)] #Reorder
#For Cortese
cortese <- primaryCandidates[primaryCandidates$ID == 1362187, ]
cortese$firstCol <- "primary"
cortese$secCol <- "Cortese"
cortese$ID <- NULL
cortese <- cortese[ , c(4, 5, 2, 1, 3)] #Reorder
#For Herrera
herrera <- primaryCandidates[primaryCandidates$ID == 1362068, ]
herrera$firstCol <- "primary"
herrera$secCol <- "Herrera"
herrera$ID <- NULL
herrera <- herrera[ , c(4, 5, 2, 1, 3)] #Reorder
runOffCandidates <- aggregate(Amt1 ~ Zip + ID + TDate,
data = mayors[(mayors$TDate > cutOffDate),], FUN = sum)
#For Liccardo
liccardoRunOff <- runOffCandidates[runOffCandidates$ID == 1361139, ]
liccardoRunOff$firstCol <- "runoff"
liccardoRunOff$secCol <- "Liccardo"
liccardoRunOff$ID <- NULL
liccardoRunOff <- liccardoRunOff[ , c(4, 5, 2, 1, 3)] #Reorder
#For Cortese
corteseRunOff <- primaryCandidates[runOffCandidates$ID == 1362187, ]
corteseRunOff$firstCol <- "runoff"
corteseRunOff$secCol <- "Cortese"
corteseRunOff$ID <- NULL
corteseRunOff <- corteseRunOff[ , c(4, 5, 2, 1, 3)] #Reorder
summaryInfo <- rbind(nguyen, liccardo, oliverio, cortese, herrera, liccardoRunOff, corteseRunOff)
write.table(summaryInfo, "summaryInfo.txt", quote=FALSE, sep="," , row.names=FALSE, col.names=FALSE)
getwd() #find summaryInfo.txt
runOffCandidates[runOffCandidates$ID == 1361139, ]
liccardoRunOff
write.table(summaryInfo, "summaryInfo.txt", quote=FALSE, sep="," , row.names=FALSE, col.names=FALSE)
getwd() #find summaryInfo.txt
write.table(summaryInfo, "summaryInfo.txt", quote=FALSE, sep="," , row.names=FALSE, col.names=FALSE)
options(java.parameters = "-Xmx1024m")
#library(XLConnect)
library(XLConnect)
setwd('~/Github/OpenDSJv2/R/hurtmedata/')
wb1 <- loadWorkbook("efile_newest_CSJ_2014.xlsx")
A.contri <- readWorksheet(wb1, sheet = 1)
install.packages("XLConnect")
options(java.parameters = "-Xmx1024m")
#library(XLConnect)
library(XLConnect)
setwd('~/Github/OpenDSJv2/R/hurtmedata/')
wb1 <- loadWorkbook("efile_newest_CSJ_2014.xlsx")
A.contri <- readWorksheet(wb1, sheet = 1)
install.packages("Hmisc")
Introduction
getwd()
getwd()
~/Github/App/presentation/SJscore.png
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("timeSeries")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("forecast")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
seriesID <- 'RSAFS'
series <- getSymbols(seriesID, src = "PAY",
auto.assign = FALSE, return.class = "timeSeries")
series <- getSymbols('PAY',
auto.assign = FALSE, return.class = "timeSeries")
plot(series)
monthplot(series)
tsdisplay(series)
series.ets <- ets(series, model = 'ZZZ')
series.1 <- removeNA(diff(series))
tsdisplay(series.1)
# Exponential Smoothing
series.ets <- ets(series, model = 'ZZZ')
series.ets <- ets(series)
ts <- decompose(series)
source('~/.active-rstudio-document', echo=TRUE)
tsdisplay(series)
series.ets <- ets(series)
series.1 <- removeNA(diff(series))
tsdisplay(series.1)
series.ets <- ets(series)
series.ets <- ets(series.1)
library(quantmod)
library(timeSeries)
library(forecast)
series <- getSymbols('PAY',
auto.assign = FALSE, return.class = "timeSeries")
plot(series)
monthplot(series)
tsdisplay(series)
series.ets <- ets(series)
series.ets <- ets(series, model="ZZZ")
series.1 <- removeNA(diff(series))
tsdisplay(series.1)
series.ets <- ets(series)
series.ets <- ets(series, model = 'ZZZ', damped = FALSE)
series <- getSymbols('PAY', auto.assign = T, return.class = "timeSeries")
series.ets <- ets(series)
series <- getSymbols('PAY', auto.assign = F, return.class = "timeSeries")
series.ets <- ets(series)
plot(series)
series.ets <- ets(series)
prices <- PAY[,6]
series.ets <- ets(prices)
series.ets
plot(series.ets)
dprices <- decompose(prices)
author: Lynna Jirpongopas
nasdaqData <- read.csv("C:/Users/lynnaj/Github/gdi-r/class1/datasets/NASDAQOMX-NDX.csv")
setwd("~/Github/gdi-r/class1/datasets")
setwd("~/Github/gdi-r/class1/datasets")
nasdaqData <- read.csv("~/Github/gdi-r/class1/datasets/NASDAQOMX-NDX.csv")
opecData <- read.csv("OPEC-ORB.csv", header = T, sep = ",", stringsAsFactors = F) #loading csv file
opecData <- read.csv("OPEC-ORB.txt", header = T, sep = "\t", stringsAsFactors = F) #loading txt file
setwd("~/Github/gdi-r/class1/datasets")
opecData <- read.csv("OPEC-ORB.csv", header = T, sep = ",", stringsAsFactors = F) #loading csv file
